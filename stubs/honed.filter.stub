<?php

declare(strict_types=1);

namespace {{ namespace }};

use Honed\Core\Contracts\HasQuery;
use Honed\Refine\Contracts\DefinesOptions;
use Honed\Refine\Filter;
use Illuminate\Database\Eloquent\Builder;

/**
 * @template TModel of \Illuminate\Database\Eloquent\Model
 * @template TBuilder of \Illuminate\Database\Eloquent\Builder<TModel>
 *
 * @extends \Honed\Refine\Filter<TModel, TBuilder>
 */
final class {{ class }} extends Filter implements HasQuery
{
    /**
     *  Create a new filter instance.
     *
     * @return static
     */
    public static function new()
    {
        return resolve(static::class);
    }

    /**
     * Provide the filter with any necessary setup.
     *
     * @return void
     */
    public function setUp()
    {
        //
    }

    /**
     * Register the query expression to resolve the filter.
     *
     * @return \Closure(TBuilder $builder, mixed $value):TBuilder|void
     */
    public function defineQuery()
    {
        return fn ($builder, $value) => $builder;
    }
}